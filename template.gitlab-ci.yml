################
# GitLabCI template for Drupal projects.
#
# This template is designed to give any Contrib maintainer everything they need to test, without requiring modification.
# It is also designed to keep up to date with Core Development automatically through the use of include files that can be centrally maintained.
# As long as you include the project, ref and three files below, any future updates added by the Drupal Association will be used in your
# pipelines automatically. However, you can modify this template if you have additional needs for your project.
# The full documentation is on https://project.pages.drupalcode.org/gitlab_templates/
################

# For information on alternative values for 'ref' see https://project.pages.drupalcode.org/gitlab_templates/info/templates-version/
# To test a Drupal 7 project, change the first include filename from .main.yml to .main-d7.yml
include:
  - project: $_GITLAB_TEMPLATES_REPO
    ref: $_GITLAB_TEMPLATES_REF
    file:
      - "/includes/include.drupalci.main.yml"
      - "/includes/include.drupalci.variables.yml"
      - "/includes/include.drupalci.workflows.yml"

################
# Pipeline configuration variables are defined with default values and descriptions in the file
# https://git.drupalcode.org/project/gitlab_templates/-/blob/main/includes/include.drupalci.variables.yml
# Uncomment the lines below if you want to override any of the variables. The following is just an example.
################
# variables:
#   SKIP_ESLINT: '1'
#   OPT_IN_TEST_NEXT_MAJOR: '1'
#   _CURL_TEMPLATES_REF: 'main'
# .gitlab-ci.yml

# Define stages
stages:
  - build_drupal
  - test_drupal
  - build_react
  - test_react
  - deploy

# Define global variables
variables:
  DRUPAL_IMAGE: "drupal:latest"
  REACT_IMAGE: "node:latest"
  DRUPAL_CONTAINER_NAME: "drupal_container"
  REACT_CONTAINER_NAME: "react_container"

# Drupal CI/CD Pipeline
build_drupal:
  stage: build_drupal
  image: $DRUPAL_IMAGE
  script:
    - echo "Building Drupal project..."
    # Add commands to build Drupal project (e.g., composer install, drush commands)
  artifacts:
    paths:
      - ./web
    expire_in: 1 week

test_drupal:
  stage: test_drupal
  image: $DRUPAL_IMAGE
  script:
    - echo "Running Drupal tests..."
    # Add commands to run tests for Drupal project (e.g., PHPUnit tests)
  dependencies:
    - build_drupal

# React.js CI/CD Pipeline
build_react:
  stage: build_react
  image: $REACT_IMAGE
  script:
    - echo "Building React project..."
    - npm install
    - npm run build
  artifacts:
    paths:
      - build
    expire_in: 1 week

test_react:
  stage: test_react
  image: $REACT_IMAGE
  script:
    - echo "Running React tests..."
    # Add commands to run tests for React project (e.g., Jest tests)
  dependencies:
    - build_react

# Deployment Pipeline
deploy:
  stage: deploy
  script:
    - echo "Deploying to production..."
    # Add commands to deploy both Drupal and React projects (e.g., rsync, SCP)
  only:
    - master
  environment:
    name: production
